trigger:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  # Nom de votre ACR (sans .azurecr.io)
  ACR_NAME: springacr98222
  # Login server complet
  ACR_LOGIN_SERVER: $(ACR_NAME).azurecr.io
  # Nom de l‚Äôimage dans votre registry
  IMAGE_NAME: springweb

stages:

# 1) Build & Test
- stage: Build
  displayName: 'üõ†Ô∏è Build & Test'
  jobs:
  - job: BuildAndTest
    displayName: 'Build and run tests'
    steps:
      # Installer Java 17
      - task: JavaToolInstaller@0
        displayName: 'Install Java 17'
        inputs:
          versionSpec: '17'
          jdkArchitectureOption: 'x64'

      # Utiliser la task Gradle int√©gr√©e (cross-plateforme)
      - task: Gradle@2
        displayName: 'Build & Test with Gradle'
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'clean test'
          options: '--no-daemon'

      # Publier les r√©sultats de tests JUnit
      - task: PublishTestResults@2
        displayName: 'Publish Test Results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/build/test-results/**/*.xml'
          failTaskOnFailedTests: true

# 2) Build & Push Docker
- stage: DockerPush
  displayName: 'üì¶ Build & Push Docker'
  dependsOn: Build
  jobs:
  - job: Docker
    displayName: 'Build & Push to ACR'
    steps:
      # Build & Push en une ligne via Docker@2 et Managed Identity
      - task: Docker@2
        displayName: 'Build & Push Docker image'
        inputs:
          command: buildAndPush
          azureSubscription: 'uami-managed-identity'   # votre service-connection
          azureContainerRegistry: '$(ACR_NAME)'        # ex. springacr98222
          repository: '$(IMAGE_NAME)'                  # ex. springweb
          dockerfile: '**/Dockerfile'
          tags: |
            latest

# 3) Deploy to Azure Web App
- stage: Deploy
  displayName: 'üöÄ Deploy to Web App'
  dependsOn: DockerPush
  jobs:
  - job: DeployWebApp
    displayName: 'Deploy container to Web App'
    steps:
      - task: AzureWebAppContainer@1
        displayName: 'Deploy to Azure Web App (Container)'
        inputs:
          azureSubscription: 'uami-managed-identity'
          appName: 'springweb-app'                                 # nom exact de votre Web App
          imageName: '$(ACR_LOGIN_SERVER)/$(IMAGE_NAME):latest'
